// +build {{.build}}
//
{{if .copyright}}{{.copyright}}
{{end}}
package gozmq

import (
	"time"
)

// This file was {{/*NOT */}}generated automatically.  Changes made here will {{/*NOT */}}be lost.

// Socket Option Getters{{with .getsockopt}}{{range .options}}

// {{.summary}}
//
// See: {{.citation}}
//
func (s *Socket) {{.nicename}}() ({{.gotype}}, error) {
	{{if .duration}}ms, err := s.GetSockOpt{{.ztype}}({{.shortname}})
	return time.Duration(ms) * {{.gounit}}, err{{else}}{{if .boolean}}value, err := s.GetSockOpt{{.ztype}}({{.shortname}})
	return value != 0, err{{else}}{{if .cast}}value, err := s.GetSockOpt{{.ztype}}({{.shortname}})
	return {{.gotype}}(value), err{{else}}return s.GetSockOpt{{.ztype}}({{.shortname}}){{end}}{{end}}{{end}}
}{{end}}{{end}}

// Socket Option Setters{{with .setsockopt}}{{range .options}}

// {{.summary}}
//
// See: {{.citation}}
//
func (s *Socket) Set{{.nicename}}(value {{.gotype}}) error {
	{{if .duration}}return s.SetSockOpt{{.ztype}}({{.shortname}}, {{.lowtype}}(value/{{.gounit}})){{else}}{{if .boolean}}if value {
		return s.SetSockOpt{{.ztype}}({{.shortname}}, 1)
	}
	return s.SetSockOpt{{.ztype}}({{.shortname}}, 0){{else}}return s.SetSockOpt{{.ztype}}({{.shortname}}, {{if .cast}}{{.lowtype}}({{end}}value{{if .cast}}){{end}}){{end}}{{end}}
}{{end}}{{end}}
